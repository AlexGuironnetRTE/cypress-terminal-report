{
  "cypress/integration/afterLogs.spec.js": {
    "after fails -> [[ after all #1 ]]": [
      {
        "type": "cy:log",
        "severity": "success",
        "message": "after log simple"
      },
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\tafter simple"
      }
    ],
    "nested after fails -> nested context -> [[ after all #1 ]]": [
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\tafter nested"
      }
    ],
    "nested after fails -> [[ after all #1 ]]": [
      {
        "type": "cy:log",
        "severity": "success",
        "message": "log after root"
      },
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\tafter root"
      }
    ]
  },
  "cypress/integration/beforeLogs.spec.js": {
    "before fails -> [[ before all #1 ]]": [
      {
        "type": "cy:log",
        "severity": "success",
        "message": "some before command"
      },
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\t.breaking.get"
      }
    ],
    "before succeeds -> the test fails": [
      {
        "type": "cy:log",
        "severity": "success",
        "message": "log"
      },
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\t.breaking.get"
      }
    ],
    "nested before fails -> nested context -> [[ before all #1 ]]": [
      {
        "type": "cy:log",
        "severity": "success",
        "message": "some before command in nested"
      },
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\t.breaking.get"
      }
    ]
  },
  "cypress/integration/mochaContexts.spec.js": {
    "main context -> first level test": [
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\t.breaking-get 1"
      }
    ],
    "main context -> second context -> second level test": [
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\t.breaking-get 2"
      }
    ],
    "main context -> second context -> third context -> third level test": [
      {
        "type": "cy:command",
        "severity": "error",
        "message": "get\t.breaking-get 3"
      }
    ]
  }
}
